package org.example.threads;

import org.example.models.TicketPrioritySystem;

public class Customer implements Runnable{
    private final String customerId;
    private final int ticketsToPurchase;
    private int totalTicketsPurchased = 0;

    public Customer(String customerId, int ticketsToPurchase) {
        this.customerId = customerId;
        this.ticketsToPurchase = ticketsToPurchase;
    }

    @Override
    public void run() {
        while (totalTicketsPurchased< ticketsToPurchase) {
            try {
                Thread.sleep(1500);
                TicketPrioritySystem.removeTickets(customerId, ticketsToPurchase, false);
                totalTicketsPurchased += ticketsToPurchase;
            } catch (InterruptedException e) {
                System.out.println("Customer "+ customerId+ " stopped.");
                Thread.currentThread().interrupt();
                break;
            }
        }
        System.out.println("Customer "+ customerId+ " purchased "+ totalTicketsPurchased+" tickets.");
    }
}
//
//import org.example.models.TicketingSystem;
//
//public class Customer implements Runnable{
//    private final TicketingSystem ticketingSystem;
//    private final String customerId;
//    private final int ticketsToPurchase;
//
//
//    public Customer(TicketingSystem ticketingSystem, String customerId, int ticketsToPurchase) {
//        this.ticketingSystem = ticketingSystem;
//        this.customerId = customerId;
//        this.ticketsToPurchase = ticketsToPurchase;
//    }
//
//    @Override
//    public void run() {
//        try {
//            while (true) {
//                Thread.sleep(3000); // Release tickets every second
//                ticketingSystem.removeTickets(customerId, ticketsToPurchase);
//            }
//        } catch (InterruptedException e) {
//            System.out.println("Customer "+ customerId+ " stopped.");;
//        }
//    }
//}

//package org.example.services;
//
//
//import org.example.models.TicketPool;
//public class Customer implements Runnable{
//
//    private final TicketPool ticketPool;
//    public boolean running = true;
//
//    public Customer(TicketPool ticketPool) {
//        this.ticketPool = ticketPool;
//    }
//    public void stop() {
//        running = false;
//    }
//
//    @Override
//    public void run() {
//
//        while (running) {
//            try {
//                String ticket = ticketPool.removeTicket();
//                System.out.println("Purchased ticket: " + ticket);
//                Thread.sleep(500);
//            }catch (InterruptedException e) {
//                Thread.currentThread().interrupt();
//                break;
//            }
//        }
//
//
//    }
//
//}
